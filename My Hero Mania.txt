local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/KarumuScrpts/E/main/PornHub%20Lib%20Loader"))() -- cal the lib
local a = library:NewWindow("Weeb","HUB") -- Change to anything
local b = a:NewSection("Main")
local c = a:NewSection("TP")
local d = a:NewSection("Player")
local e = a:NewSection("Visual")
local q = a:NewSection("Settings")


--//Things\\--
local client = game.Players.LocalPlayer
local char = client.Character

local noclip = false
local infjumpenabled = false

game:GetService("RunService").RenderStepped:Connect(function()
    if noclip == true then
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
    end
end)

game:GetService("UserInputService").JumpRequest:Connect(function()
	if infjumpenabled then
		game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState("Jumping")
	end
end)


getgenv().attack_sequence = 1
getgenv().mob = ""

local work = game:GetService("Workspace")
local mobs = work.Living
local players = game:GetService("Players")
local lplayer = players.LocalPlayer

--//Quest Table\\--
local QuestTbl = {};

for i,v in pairs(game:GetService("ReplicatedStorage").Package.Quests:GetChildren()) do
    table.insert(QuestTbl,v.Name)
end;

--//Npc Table\\--
local NPC = {};

for i,v in pairs(game:GetService("Workspace").Others.NPCSpawns:GetChildren()) do
    table.insert(NPC,v.Name)
end;

--//Vars\\--
local CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
local Player = game:GetService("Players").LocalPlayer;
local Human = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
local MobP = "";
local QuestP = "";
local USERID = game.Players.LocalPlayer.UserId
local DIS = -3

--//Main\\--

b:Toggle("Hide Name", function(value)
    _G.HideN = value

    while _G.HideN and wait() do
        for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v.Name == 'Pants' or v.ClassName == "Accessory" or v.Name == 'Shirt' or v.Name == 'Title' then
                 v:Destroy()
            end;
        end; 
    end;
end);

b:Toggle("Auto Farm",function(value)
    _G.Autofarm = value

    while _G.Autofarm and wait() do
        for i,v in pairs(game.Workspace.Living:GetChildren()) do
        if game.Players.LocalPlayer.Character and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                if _G.AutoQuest and game:GetService("ReplicatedStorage").Datas[USERID].QuestProgress.Value == 0 then 
                    game:GetService("ReplicatedStorage").Package.Events.GetQuest:InvokeServer(QuestP) end; 
                        if string.match(v.Name, MobP) and v.Humanoid.Health > 0 then
                        repeat wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + (v.HumanoidRootPart.CFrame.lookVector * DIS)
                        game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(1) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(2) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(3) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(4) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(5)
                    until v.Humanoid.Health <= 0 or not _G.Autofarm
                end;
            end;
        end;
    end;
end)

b:Toggle("Auto Quest",function(value)
_G.AutoQuest = value
end)

b:Drop("Mob", NPC, function(value)
    MobP = value
end)


b:Drop("Quest", QuestTbl, function(value)
    QuestP = value
end);


local CharacterTP_Table = {}
    local SpawnTP_Table = {}

    for i, v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
        if v:IsA("Model") then
            table.insert(CharacterTP_Table, v.Name)
        end
    end

    for i, v in pairs(game:GetService("Workspace").Others.Spawns:GetChildren()) do
        if v:IsA("Part") then
            table.insert(SpawnTP_Table, v.Name)
        end
    end
    
--//Teleport\\--

c:Drop("NPC",CharacterTP_Table,function(value)
                getgenv().npcTP = value
                for i, v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
                    if v.Name == getgenv().npcTP then
                        lplayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame
                    end
                end
            end)

c:Drop("Spawn Points",SpawnTP_Table, function(value)
getgenv().spawnTP = value
    for i, v in pairs(game:GetService("Workspace").Others.Spawns:GetChildren()) do
        if v.Name == getgenv().spawnTP then
            lplayer.Character.HumanoidRootPart.CFrame = v.CFrame
        end
    end
end)

--//Player\\--
d:Slider("WalkSpeed",0,250, function(Value)
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)

d:Slider("Jump Power",0,250, function(Value)
	game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Value
end)

d:Slider("Gravity",0,500, function(Value)
    workspace.Gravity = Value
end)

d:Toggle("Noclip", function(Value)
    noclip = Value
end)

d:Toggle("Infinite Jump", function(value)
infjumpenabled = value
end)

--//Visual\\--

e:Button("FPS Booster", function(value)
local removedecals = false
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i, v in pairs(g:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("Decal") or v:IsA("Texture") and removedecals then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    end
end
for i, e in pairs(l:GetChildren()) do
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
end)

e:Slider("FOV",0,120, function(Value)
    
local amount = fovamount

game:GetService'Workspace'.Camera.FieldOfView = Value

end)

e:Toggle("Xray", function(value)
    if value then
        for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and not v.Parent.Parent:FindFirstChild("Humanoid") then
				v.Transparency = v.Transparency + 0.5
			end
		end
    else
        for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and not v.Parent.Parent:FindFirstChild("Humanoid") then
				v.Transparency = v.Transparency - 0.5
			end
		end
    end
end)

e:Toggle("ESP", function(value)
shared.Visuals = { --// Configuration (Will load default settings if shared.Visuals doesn't exist.)
    Enabled = value,
    CrosshairEnabled = false,
    Boxes = true,
    Healthbar = true,
    Tracers = true,
    Info = true,
    ShowAllyTeam = true,
    UseTeamColor = true,
    AllyColor = Color3.fromRGB(0, 255, 0),
    EnemyColor = Color3.fromRGB(255, 0, 0),
    Crosshair = {
        Size = 5,
        Thickness = 1.5,
        Offset = 5
    }
}

loadstring(game:HttpGet("https://raw.githubusercontent.com/coastss/releases/main/universal_visuals.lua"))()
end)

--//Settings\\--

q:Box("Auto Farm Distance", function(Goul, Reg)
    DIS = tonumber(Goul.Text) or -3
end);


